name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
  - cron: "0 2 * * 1-5"

# to make bash use ~/.bashrc, see https://github.com/marketplace/actions/setup-miniconda#example-5-custom-installer
defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.9] #[3.7, 3.8, 3.9]

    steps:
    - uses: maxim-lobanov/setup-xcode@v1
      # alternative would be to upgrade tapi to 1100.0.11, we can possibly remove this in the future
      if: matrix.os == 'macOS-latest'
      with:
        xcode-version: "11.7.0"
#         xcode-version: latest
    - uses: actions/checkout@v1
      with:
        submodules: true
    - uses: actions/checkout@v2
    - name: Install conda with Python ${{ matrix.python-version }}
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        auto-activate-base: true
        channels: conda-forge, spyder-ide
        environment-file: "environment.yml"
        activate-environment: "DeepForest"
        allow-softlinks: true
        channel-priority: flexible
        show-channel-urls: true
        use-only-tar-bz2: true
    - name: Install OpenMP runtime (Mac-only)
      if: matrix.os == 'macOS-latest'
      run: |
        brew install libomp
    - name: Cache compiled binaries
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if env.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: "~/conda_pkgs_dir"
        key: "${{ matrix.os }}-conda-${{ matrix.python-version }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('enviroment.yml') }}"

    - name: Test with pytest
      run: |
        conda activate DeepForest
        pytest -v
